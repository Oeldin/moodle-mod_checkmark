{"version":3,"sources":["../src/submission.js"],"names":["define","log","Submission","prototype","updateSummary","examplesNew","gradeNew","els","document","getElementsByTagName","i","length","attributes","checked","parseInt","dataset","getElementById","innerHTML","toString","resetSubmissionForm","e","preventDefault","getElementsByClassName","reset","instance","initializer","debug","addEventListener"],"mappings":"AA2BAA,OAAM,4BAAC,CAAC,UAAD,CAAD,CAAe,SAASC,CAAT,CAAc,CAM/B,GAAIC,CAAAA,CAAU,CAAG,UAAW,CAC3B,CADD,CAQAA,CAAU,CAACC,SAAX,CAAqBC,aAArB,CAAqC,UAAW,CAK5C,OAJIC,CAAAA,CAAW,CAAG,CAIlB,CAHIC,CAAQ,CAAG,CAGf,CADIC,CAAG,CAAGC,QAAQ,CAACC,oBAAT,CAA8B,OAA9B,CACV,CAAQC,CAAC,CAAG,CAAZ,CAAeA,CAAC,CAAGH,CAAG,CAACI,MAAvB,CAA+BD,CAAC,EAAhC,CAAoC,CAChC,GAAIH,CAAG,CAACG,CAAD,CAAH,CAAOE,UAAP,CAAkB,cAAlB,UAAJ,CAAqD,CACjD,QACH,CACD,GAAIL,CAAG,CAACG,CAAD,CAAH,CAAOG,OAAX,CAAoB,CAChBR,CAAW,GACXC,CAAQ,EAAIQ,QAAQ,CAACP,CAAG,CAACG,CAAD,CAAH,CAAOK,OAAP,MAAD,CACvB,CACJ,CAEDP,QAAQ,CAACQ,cAAT,CAAwB,UAAxB,EAAoCC,SAApC,CAAgDZ,CAAW,CAACa,QAAZ,EAAhD,CACAV,QAAQ,CAACQ,cAAT,CAAwB,OAAxB,EAAiCC,SAAjC,CAA6CX,CAAQ,CAACY,QAAT,EAA7C,CAEA,QACH,CAnBD,CA6BAhB,CAAU,CAACC,SAAX,CAAqBgB,mBAArB,CAA2C,SAASC,CAAT,CAAY,CACnDA,CAAC,CAACC,cAAF,GAEAb,QAAQ,CAACc,sBAAT,CAAgC,gBAAhC,EAAkD,CAAlD,EAAqDC,KAArD,GACArB,CAAU,CAACC,SAAX,CAAqBC,aAArB,GAEA,QACH,CAPD,CASA,GAAIoB,CAAAA,CAAQ,CAAG,GAAItB,CAAAA,CAAnB,CAOAsB,CAAQ,CAACC,WAAT,CAAuB,UAAW,CAC9BxB,CAAG,CAACyB,KAAJ,CAAU,gCAAV,CAA4C,WAA5C,EAGA,OADInB,CAAAA,CAAG,CAAGC,QAAQ,CAACC,oBAAT,CAA8B,OAA9B,CACV,CAAQC,CAAC,CAAG,CAAZ,CAAeA,CAAC,CAAGH,CAAG,CAACI,MAAvB,CAA+BD,CAAC,EAAhC,CAAoC,CAChC,GAAIH,CAAG,CAACG,CAAD,CAAH,CAAOE,UAAP,CAAkB,cAAlB,SAAJ,CAAoD,CAChD,QACH,CACDL,CAAG,CAACG,CAAD,CAAH,CAAOiB,gBAAP,CAAwB,OAAxB,CAAiCH,CAAQ,CAACpB,aAA1C,CACH,CAGDI,QAAQ,CAACQ,cAAT,CAAwB,gBAAxB,EAA0CW,gBAA1C,CAA2D,OAA3D,CAAoE,KAAKR,mBAAzE,EAGAX,QAAQ,CAACc,sBAAT,CAAgC,gBAAhC,EAAkD,CAAlD,EAAqDC,KAArD,GAGA,KAAKnB,aAAL,GAEA,QACH,CArBD,CAuBA,MAAOoB,CAAAA,CACV,CAnFK,CAAN","sourcesContent":["// This file is part of mod_checkmark for Moodle - http://moodle.org/\r\n//\r\n// It is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// It is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * submission.js\r\n *\r\n * @package   mod_checkmark\r\n * @author    Philipp Hager\r\n * @copyright 2014 Academic Moodle Cooperation {@link http://www.academic-moodle-cooperation.org}\r\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\n /**\r\n  * @module mod_checkmark/submission\r\n  */\r\ndefine(['core/log'], function(log) {\r\n\r\n    /**\r\n     * @constructor\r\n     * @alias module:mod_checkmark/submission\r\n     */\r\n    var Submission = function() {\r\n    };\r\n\r\n    /**\r\n     * UpdateSummary updates the displayed summary during submission edit\r\n     *\r\n     * @return {boolean} true if everything's allright (no error handling by now)\r\n     */\r\n    Submission.prototype.updateSummary = function() {\r\n        var examplesNew = 0;\r\n        var gradeNew = 0;\r\n\r\n        var els = document.getElementsByTagName('input');\r\n        for(var i = 0; i < els.length; i++) {\r\n            if (els[i].attributes['data-example'] === undefined) {\r\n                continue;\r\n            }\r\n            if (els[i].checked) {\r\n                examplesNew++;\r\n                gradeNew += parseInt(els[i].dataset['grade']);\r\n            }\r\n        }\r\n\r\n        document.getElementById('examples').innerHTML = examplesNew.toString();\r\n        document.getElementById('grade').innerHTML = gradeNew.toString();\r\n\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * ResetSubmissionForm reset method replaces std-reset-behaviour\r\n     *   I) prevents default reset behaviour\r\n     *  II) resets the form manually\r\n     * III) ensure to display updated data\r\n     * @param {Event} e event-object\r\n     * @return {boolean} true if everything's allright (no error handling by now)\r\n     */\r\n    Submission.prototype.resetSubmissionForm = function(e) {\r\n        e.preventDefault();\r\n\r\n        document.getElementsByClassName('submissionform')[0].reset();\r\n        Submission.prototype.updateSummary();\r\n\r\n        return true;\r\n    };\r\n\r\n    var instance = new Submission();\r\n\r\n    /**\r\n     * Initializer prepares checkmark-data and registers event-listeners for each checkbox\r\n     *\r\n     * @return {boolean} true if everything's ok (no error-handling implemented)\r\n     */\r\n    instance.initializer = function() {\r\n        log.debug('Init checkmark submissions js!', 'checkmark');\r\n\r\n        var els = document.getElementsByTagName('input');\r\n        for(var i = 0; i < els.length; i++) {\r\n            if (els[i].attributes['data-example'] == undefined) {\r\n                continue;\r\n            }\r\n            els[i].addEventListener('click', instance.updateSummary);\r\n        }\r\n\r\n        // Register event-listener on reset-button to ensure proper data to be displayed on form-reset!\r\n        document.getElementById('id_resetbutton').addEventListener('click', this.resetSubmissionForm);\r\n\r\n        // Reset the formular after init to ensure correct checkbox-states after page-reload!\r\n        document.getElementsByClassName('submissionform')[0].reset();\r\n\r\n        // Update summary to display correct data after form-reset!\r\n        this.updateSummary();\r\n\r\n        return true;\r\n    };\r\n\r\n    return instance;\r\n});\r\n"],"file":"submission.min.js"}