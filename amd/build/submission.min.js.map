{"version":3,"sources":["../src/submission.js"],"names":["define","log","Submission","prototype","updateSummary","examplesNew","gradeNew","els","document","getElementsByTagName","i","length","attributes","checked","parseInt","dataset","getElementById","innerHTML","toString","resetSubmissionForm","e","preventDefault","getElementsByClassName","reset","instance","initializer","debug","addEventListener"],"mappings":"AA2BAA,OAAM,4BAAC,CAAC,UAAD,CAAD,CAAe,SAASC,CAAT,CAAc,CAM/B,GAAIC,CAAAA,CAAU,CAAG,UAAW,CAC3B,CADD,CAQAA,CAAU,CAACC,SAAX,CAAqBC,aAArB,CAAqC,UAAW,CAK5C,OAJIC,CAAAA,CAAW,CAAG,CAIlB,CAHIC,CAAQ,CAAG,CAGf,CADIC,CAAG,CAAGC,QAAQ,CAACC,oBAAT,CAA8B,OAA9B,CACV,CAAQC,CAAC,CAAG,CAAZ,CAAeA,CAAC,CAAGH,CAAG,CAACI,MAAvB,CAA+BD,CAAC,EAAhC,CAAoC,CAChC,GAAIH,CAAG,CAACG,CAAD,CAAH,CAAOE,UAAP,CAAkB,cAAlB,UAAJ,CAAqD,CACjD,QACH,CACD,GAAIL,CAAG,CAACG,CAAD,CAAH,CAAOG,OAAX,CAAoB,CAChBR,CAAW,GACXC,CAAQ,EAAIQ,QAAQ,CAACP,CAAG,CAACG,CAAD,CAAH,CAAOK,OAAP,MAAD,CACvB,CACJ,CAEDP,QAAQ,CAACQ,cAAT,CAAwB,UAAxB,EAAoCC,SAApC,CAAgDZ,CAAW,CAACa,QAAZ,EAAhD,CACAV,QAAQ,CAACQ,cAAT,CAAwB,OAAxB,EAAiCC,SAAjC,CAA6CX,CAAQ,CAACY,QAAT,EAA7C,CAEA,QACH,CAnBD,CA6BAhB,CAAU,CAACC,SAAX,CAAqBgB,mBAArB,CAA2C,SAASC,CAAT,CAAY,CACnDA,CAAC,CAACC,cAAF,GAEAb,QAAQ,CAACc,sBAAT,CAAgC,gBAAhC,EAAkD,CAAlD,EAAqDC,KAArD,GACArB,CAAU,CAACC,SAAX,CAAqBC,aAArB,GAEA,QACH,CAPD,CASA,GAAIoB,CAAAA,CAAQ,CAAG,GAAItB,CAAAA,CAAnB,CAOAsB,CAAQ,CAACC,WAAT,CAAuB,UAAW,CAC9BxB,CAAG,CAACyB,KAAJ,CAAU,gCAAV,CAA4C,WAA5C,EAGA,OADInB,CAAAA,CAAG,CAAGC,QAAQ,CAACC,oBAAT,CAA8B,OAA9B,CACV,CAAQC,CAAC,CAAG,CAAZ,CAAeA,CAAC,CAAGH,CAAG,CAACI,MAAvB,CAA+BD,CAAC,EAAhC,CAAoC,CAChC,GAAIH,CAAG,CAACG,CAAD,CAAH,CAAOE,UAAP,CAAkB,cAAlB,SAAJ,CAAoD,CAChD,QACH,CACDL,CAAG,CAACG,CAAD,CAAH,CAAOiB,gBAAP,CAAwB,OAAxB,CAAiCH,CAAQ,CAACpB,aAA1C,CACH,CAGD,GAAII,QAAQ,CAACQ,cAAT,CAAwB,gBAAxB,CAAJ,CAA+C,CAC3CR,QAAQ,CAACQ,cAAT,CAAwB,gBAAxB,EAA0CW,gBAA1C,CAA2D,OAA3D,CAAoE,KAAKR,mBAAzE,CACH,CAGD,GAAIX,QAAQ,CAACc,sBAAT,CAAgC,gBAAhC,EAAkD,CAAlD,CAAJ,CAA0D,CACtDd,QAAQ,CAACc,sBAAT,CAAgC,gBAAhC,EAAkD,CAAlD,EAAqDC,KAArD,EACH,CAGD,KAAKnB,aAAL,GAEA,QACH,CAzBD,CA2BA,MAAOoB,CAAAA,CACV,CAvFK,CAAN","sourcesContent":["// This file is part of mod_checkmark for Moodle - http://moodle.org/\n//\n// It is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// It is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * submission.js\n *\n * @package   mod_checkmark\n * @author    Philipp Hager\n * @copyright 2014 Academic Moodle Cooperation {@link http://www.academic-moodle-cooperation.org}\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n /**\n  * @module mod_checkmark/submission\n  */\ndefine(['core/log'], function(log) {\n\n    /**\n     * @constructor\n     * @alias module:mod_checkmark/submission\n     */\n    var Submission = function() {\n    };\n\n    /**\n     * UpdateSummary updates the displayed summary during submission edit\n     *\n     * @return {boolean} true if everything's allright (no error handling by now)\n     */\n    Submission.prototype.updateSummary = function() {\n        var examplesNew = 0;\n        var gradeNew = 0;\n\n        var els = document.getElementsByTagName('input');\n        for(var i = 0; i < els.length; i++) {\n            if (els[i].attributes['data-example'] === undefined) {\n                continue;\n            }\n            if (els[i].checked) {\n                examplesNew++;\n                gradeNew += parseInt(els[i].dataset['grade']);\n            }\n        }\n\n        document.getElementById('examples').innerHTML = examplesNew.toString();\n        document.getElementById('grade').innerHTML = gradeNew.toString();\n\n        return true;\n    };\n\n    /**\n     * ResetSubmissionForm reset method replaces std-reset-behaviour\n     *   I) prevents default reset behaviour\n     *  II) resets the form manually\n     * III) ensure to display updated data\n     * @param {Event} e event-object\n     * @return {boolean} true if everything's allright (no error handling by now)\n     */\n    Submission.prototype.resetSubmissionForm = function(e) {\n        e.preventDefault();\n\n        document.getElementsByClassName('submissionform')[0].reset();\n        Submission.prototype.updateSummary();\n\n        return true;\n    };\n\n    var instance = new Submission();\n\n    /**\n     * Initializer prepares checkmark-data and registers event-listeners for each checkbox\n     *\n     * @return {boolean} true if everything's ok (no error-handling implemented)\n     */\n    instance.initializer = function() {\n        log.debug('Init checkmark submissions js!', 'checkmark');\n\n        var els = document.getElementsByTagName('input');\n        for(var i = 0; i < els.length; i++) {\n            if (els[i].attributes['data-example'] == undefined) {\n                continue;\n            }\n            els[i].addEventListener('click', instance.updateSummary);\n        }\n\n        // Register event-listener on reset-button to ensure proper data to be displayed on form-reset!\n        if (document.getElementById('id_resetbutton')) {\n            document.getElementById('id_resetbutton').addEventListener('click', this.resetSubmissionForm);\n        }\n\n        // Reset the formular after init to ensure correct checkbox-states after page-reload!\n        if (document.getElementsByClassName('submissionform')[0]) {\n            document.getElementsByClassName('submissionform')[0].reset();\n        }\n\n        // Update summary to display correct data after form-reset!\n        this.updateSummary();\n\n        return true;\n    };\n\n    return instance;\n});\n"],"file":"submission.min.js"}